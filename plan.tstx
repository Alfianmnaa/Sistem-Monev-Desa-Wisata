import React, { useState, useEffect } from "react";
import verifikasi from "../../assets/Dashboard/verifikasi.svg";
import accountCircle from "../../assets/Dashboard/accountCircle.svg";
import { FaBars, FaTimes } from "react-icons/fa";

export const Sidebar = ({ activeSection, setActiveSection }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [isMobile, setIsMobile] = useState(false);

  // Handle screen resize
  useEffect(() => {
    const checkScreenSize = () => {
      setIsMobile(window.innerWidth < 768);
      if (window.innerWidth >= 768) {
        setIsOpen(true);
      } else {
        setIsOpen(false);
      }
    };

    checkScreenSize();
    window.addEventListener("resize", checkScreenSize);
    return () => window.removeEventListener("resize", checkScreenSize);
  }, []);

  const toggleSidebar = () => {
    setIsOpen(!isOpen);
  };

  const handleNavClick = (section) => {
    setActiveSection(section);
    if (isMobile) {
      setIsOpen(false);
    }
  };

  return (
    <>
      {/* Hamburger menu for mobile */}
      {isMobile && (
        <div className="fixed top-4 left-4 z-20">
          <button onClick={toggleSidebar} className="bg-black text-white p-2 rounded-md">
            {isOpen ? <FaTimes size={20} /> : <FaBars size={20} />}
          </button>
        </div>
      )}

      {/* Sidebar content */}
      <div className={`bg-white md:w-64 flex-shrink-0 border-r border-gray-200 fixed md:sticky top-0 h-full z-40 transition-all duration-300 ease-in-out ${isOpen ? "left-0 w-64" : "-left-64 w-0 md:left-0 md:w-64"}`}>
        <div className="p-4 flex items-center">
          <div className="w-10 h-10 bg-black rounded-full flex items-center justify-center text-white font-bold">M</div>
          <span className="ml-2 font-bold text-lg">Monev</span>
        </div>

        <nav className="mt-6">
          <div className={`flex items-center px-4 py-3 cursor-pointer ${activeSection === "verifikasi" ? "bg-gray-100 border-l-4 border-black" : ""}`} onClick={() => handleNavClick("verifikasi")}>
            <div className="w-6 h-6 mr-3">
              <img src={verifikasi} alt="icon-verif" />
            </div>
            <span className={activeSection === "verifikasi" ? "font-medium" : "text-gray-600"}>Permintaan Verifikasi</span>
          </div>

          <div className={`flex items-center px-4 py-3 cursor-pointer ${activeSection === "akun" ? "bg-gray-100 border-l-4 border-black" : ""}`} onClick={() => handleNavClick("akun")}>
            <div className="w-6 h-6 mr-3">
              <img src={accountCircle} alt="accountCircle" />
            </div>
            <span className={activeSection === "akun" ? "font-medium" : "text-gray-600"}>Akun</span>
          </div>
        </nav>
      </div>

      {/* Overlay for mobile when sidebar is open */}
      {isOpen && isMobile && <div className="fixed inset-0 bg-black bg-opacity-50 z-30" onClick={toggleSidebar} />}
    </>
  );
};

import React, { useState } from "react";
import profile from "../../assets/Dashboard/profile.svg";
import Swal from "sweetalert2";

export const Akun = () => {
  const [email, setEmail] = useState("desawisata@gmail.com");
  const [password, setPassword] = useState("********");
  const [isEditing, setIsEditing] = useState({
    email: false,
    password: false,
  });
  const [tempValues, setTempValues] = useState({
    email: "",
    password: "",
  });

  const handleEdit = (field) => {
    setTempValues({
      ...tempValues,
      [field]: field === "email" ? email : "",
    });
    setIsEditing({
      ...isEditing,
      [field]: true,
    });
  };

  const handleSave = () => {
    Swal.fire({
      title: "Konfirmasi Perubahan",
      text: "Apakah Anda yakin ingin menyimpan perubahan?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#16a34a",
      cancelButtonColor: "#d33",
      confirmButtonText: "Ya, Simpan!",
      cancelButtonText: "Batal",
    }).then((result) => {
      if (result.isConfirmed) {
        if (isEditing.email && tempValues.email) {
          setEmail(tempValues.email);
        }
        if (isEditing.password && tempValues.password) {
          setPassword("********"); // Always display asterisks for password
        }
        setIsEditing({ email: false, password: false });

        Swal.fire("Berhasil!", "Detail akun berhasil diperbarui.", "success");
      }
    });
  };

  const handleCancel = () => {
    setIsEditing({ email: false, password: false });
  };

  return (
    <div className="flex-1 overflow-x-auto md:ml-0 md:mt-0 mt-16">
      <div className="p-6">
        {/* Header */}
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold">Detail akun</h1>
          <div className="flex items-center">
            <div className="mr-2 text-right">
              <div className="font-semibold">Alfian Maulana</div>
              <div className="text-sm text-gray-500">Admin</div>
            </div>
            <div className="h-10 w-10 rounded-full bg-blue-600 overflow-hidden">
              <img src={profile} alt="Profile" className="h-full w-full object-cover" />
            </div>
          </div>
        </div>

        {/* Account Details Form */}
        <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
          <div className="grid grid-cols-1 gap-6 max-w-2xl">
            {/* Email Field */}
            <div className="grid grid-cols-1 sm:grid-cols-3 items-center gap-4">
              <label className="text-gray-700 font-medium">Email</label>
              <div className="sm:col-span-2 flex items-center">
                {isEditing.email ? (
                  <input type="email" value={tempValues.email} onChange={(e) => setTempValues({ ...tempValues, email: e.target.value })} className="border border-gray-300 rounded px-3 py-2 w-full" />
                ) : (
                  <div className="border border-gray-300 rounded px-3 py-2 bg-white">{email}</div>
                )}
                {isEditing.email ? null : (
                  <button onClick={() => handleEdit("email")} className="ml-2 text-blue-500 text-sm hover:underline">
                    ubah email
                  </button>
                )}
              </div>
            </div>

            {/* Password Field */}
            <div className="grid grid-cols-1 sm:grid-cols-3 items-center gap-4">
              <label className="text-gray-700 font-medium">Password</label>
              <div className="sm:col-span-2 flex items-center">
                {isEditing.password ? (
                  <input
                    type="password"
                    value={tempValues.password}
                    onChange={(e) => setTempValues({ ...tempValues, password: e.target.value })}
                    className="border border-gray-300 rounded px-3 py-2 w-full"
                    placeholder="Masukkan password baru"
                  />
                ) : (
                  <div className="border border-gray-300 rounded px-3 py-2 bg-white w-32">{password}</div>
                )}
                {isEditing.password ? null : (
                  <button onClick={() => handleEdit("password")} className="ml-2 text-blue-500 text-sm hover:underline">
                    ubah password
                  </button>
                )}
              </div>
            </div>

            {/* Action Buttons - only show when editing */}
            {(isEditing.email || isEditing.password) && (
              <div className="flex justify-end gap-2 mt-4">
                <button onClick={handleCancel} className="px-4 py-2 text-blue-600 hover:bg-blue-50 rounded">
                  Batal
                </button>
                <button onClick={handleSave} className="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">
                  Simpan
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};


// Verifikasi.jsx
import React, { useState, useEffect } from "react";
import profile from "../../assets/Dashboard/profile.svg";
import { FaCaretDown } from "react-icons/fa";
import Swal from "sweetalert2";

export const Verifikasi = () => {
  const [requests, setRequests] = useState([
    { id: 1, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Diterima" },
    { id: 2, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Diproses" },
    { id: 3, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Selesai" },
    { id: 4, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Ditolak" },
    { id: 5, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Diterima" },
    { id: 6, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Diproses" },
    { id: 7, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Selesai" },
    { id: 8, email: "desawisata@gmail.com", name: "Desa Wisata Lorem Ipsum", date: "18/04/2025 23.17", status: "Ditolak" },
  ]);

  const [openDropdown, setOpenDropdown] = useState(null);

  // Close dropdown when clicking outside
  useEffect(() => {
    const closeDropdown = (e) => {
      if (!e.target.closest(".status-dropdown")) {
        setOpenDropdown(null);
      }
    };

    document.addEventListener("click", closeDropdown);
    return () => document.removeEventListener("click", closeDropdown);
  }, []);

  const statusOptions = ["Diterima", "Diproses", "Selesai", "Ditolak"];

  const getStatusColor = (status) => {
    switch (status) {
      case "Diterima":
        return "bg-blue-500 text-white";
      case "Diproses":
        return "bg-yellow-500 text-white";
      case "Selesai":
        return "bg-green-500 text-white";
      case "Ditolak":
        return "bg-red-500 text-white";
      default:
        return "bg-gray-500 text-white";
    }
  };

  const toggleDropdown = (id) => {
    setOpenDropdown(openDropdown === id ? null : id);
  };

  const changeStatus = (requestId, newStatus) => {
    Swal.fire({
      title: "Konfirmasi Perubahan Status",
      text: `Apakah Anda yakin ingin mengubah status menjadi "${newStatus}"?`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Ya, Ubah!",
      cancelButtonText: "Batal",
    }).then((result) => {
      if (result.isConfirmed) {
        setRequests(requests.map((req) => (req.id === requestId ? { ...req, status: newStatus } : req)));
        setOpenDropdown(null);

        Swal.fire("Berhasil!", "Status berhasil diubah.", "success");
      }
    });
  };

  return (
    <div className="flex-1 overflow-x-auto md:ml-0 md:mt-0 mt-16">
      <div className="p-6">
        {/* Header */}
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold">Permintaan Verifikasi</h1>
          <div className="flex items-center">
            <div className="mr-2 text-right">
              <div className="font-semibold">Alfian Maulana</div>
              <div className="text-sm text-gray-500">Admin</div>
            </div>
            <div className="h-10 w-10 rounded-full bg-blue-600 overflow-hidden">
              <img src={profile} alt="Profile" className="h-full w-full object-cover" />
            </div>
          </div>
        </div>

        {/* Filter */}
        <div className="mb-6">
          <div className="text-sm mb-2">Urutkan</div>
          <div className="relative inline-block">
            <select className="border border-gray-300 rounded px-4 py-2 pr-10 appearance-none bg-white">
              <option>Permintaan Terbaru</option>
            </select>
            <div className="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
              <FaCaretDown size={16} />
            </div>
          </div>
        </div>

        {/* Table */}
        <div className="bg-white rounded-lg overflow-x-scroll shadow-sm border border-gray-200">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th scope="col" className="px-4 py-3 text-left text-sm font-medium text-gray-600">
                  No
                </th>
                <th scope="col" className="px-4 py-3 text-left text-sm font-medium text-gray-600">
                  Email
                </th>
                <th scope="col" className="px-4 py-3 text-left text-sm font-medium text-gray-600">
                  Nama Desa Wisata
                </th>
                <th scope="col" className="px-4 py-3 text-left text-sm font-medium text-gray-600">
                  Tanggal & Waktu Permintaan(?)
                </th>
                <th scope="col" className="px-4 py-3 text-left text-sm font-medium text-gray-600">
                  Status Request
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {requests.map((request) => (
                <tr key={request.id}>
                  <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{request.id}</td>
                  <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{request.email}</td>
                  <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{request.name}</td>
                  <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{request.date}</td>
                  <td className="px-4 py-3 whitespace-nowrap text-sm relative">
                    <div className="status-dropdown">
                      <button onClick={() => toggleDropdown(request.id)} className={`inline-flex items-center px-3 py-1 rounded ${getStatusColor(request.status)}`}>
                        {request.status} <FaCaretDown size={16} className="ml-1" />
                      </button>

                      {openDropdown === request.id && (
                        <div className="absolute mt-1 w-44 bg-white rounded-md shadow-lg z-10">
                          <ul className="py-1">
                            {statusOptions.map((status) => (
                              <li key={status}>
                                <button onClick={() => changeStatus(request.id, status)} className={`block px-4 py-2 text-sm w-full text-left hover:bg-gray-100 ${status === request.status ? "font-bold" : ""}`}>
                                  {status}
                                </button>
                              </li>
                            ))}
                          </ul>
                        </div>
                      )}
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

import React, { useState } from "react";
import { Verifikasi } from "../components/DashboardAdmin/Verifikasi";
import { Sidebar } from "../components/DashboardAdmin/Sidebar";
import { Akun } from "../components/DashboardAdmin/Akun";

export const DashboardAdmin = () => {
  const [activeSection, setActiveSection] = useState("verifikasi");
  return (
    <div className="flex flex-col md:flex-row min-h-screen bg-gray-50">
      <Sidebar activeSection={activeSection} setActiveSection={setActiveSection} />
      {activeSection === "verifikasi" ? <Verifikasi /> : <Akun />}
    </div>
  );
};

